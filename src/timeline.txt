ðŸ“… Suggested Timeline
- Week 1
- Phase 1â€“2 (ConductManager skeleton + AudioPolicy).
- Phase 3 (LightPolicy).
- Week 2
- Phase 4 (OTA integration).
- Phase 5 (replace ContextManager).
- Phase 6 (dismantle Globals).

âœ… Summary
- Start small: ConductManager skeleton that just forwards.
- Layer in AudioPolicy and LightPolicy.
- Add OTA.
- Replace ContextManager.
- Finally, dismantle Globals.
- At each step, run a tiny demo sketch to validate the new layer before moving on.


 Refactor Roadâ€‘Map
Phase 1: Lay the foundation
Goal: Introduce ConductManager skeleton without breaking existing modules.
- Create ConductManager.h/.cpp with:
- begin(), update()
- Intents: intentPlayFragment(), intentSayTime(), intentSetBrightness(), intentSetAudioLevel()
- For now, ConductManager just forwards to existing globals and managers (no policies yet).
- Keep ContextManager running in parallel until ConductManager is stable.
Test/demo program:
#include "ConductManager.h"

void setup() {
  Serial.begin(115200);
  ConductManager::begin();
}

void loop() {
  ConductManager::update();
  delay(1000);
  ConductManager::intentSayTime(); // demo: say time every second
}

î·™î·š
âœ… Confirms ConductManager can call into SpeakManager/AudioManager.

Phase 2: Extract AudioPolicy
Goal: Move arbitration rules out of PlaySentence/PlayFragment.
- Create AudioPolicy.h/.cpp with:
- canPlayFragment(), canPlaySentence()
- applyVolumeRules()
- requestFragment(), requestSentence()
- Refactor ConductManager intents to call AudioPolicy instead of PlaySentence/PlayFragment directly.
Test/demo program:
void loop() {
  ConductManager::intentPlayFragment();
  delay(10000);
  ConductManager::intentSayTime();
  delay(10000);
}


âœ… Confirms fragments and TTS arbitrate correctly.

Phase 3: Extract LightPolicy
Goal: Centralize brightness rules.
- Create LightPolicy.h/.cpp with:
- applyBrightnessRules(requested, quietHours)
- applyPaletteOverride(baseColor, christmasMode)
- Refactor ConductManager intentSetBrightness() to use LightPolicy.
Test/demo program:
void loop() {
  ConductManager::intentSetBrightness(200); // should cap in quiet hours
  delay(5000);
  ConductManager::intentSetBrightness(20);
  delay(5000);
}

î·™î·š
âœ… Confirms brightness obeys quiet hours.

Phase 4: Integrate OTA
Goal: Route OTA through ConductManager.
- Add intentArmOTA(), intentConfirmOTA() to ConductManager.
- ConductManager stops audio/lights when OTA armed.
- Delegate to OTAManager for actual update.
Test/demo program:
void loop() {
  ConductManager::intentArmOTA(60); // 1 min window
  delay(10000);
  ConductManager::intentConfirmOTA(); // should reboot into OTA
}


âœ… Confirms OTA flow works.

Phase 5: Replace ContextManager
Goal: Retire ContextManager tick.
- Remove ContextManager_post() and tick loop.
- Replace with ConductManager intents everywhere (WebInterfaceManager, timers).
- Migrate recurring timers (sayTime, playFragment, nextLightShow) into ConductManager::begin().
Test/demo program:
void setup() {
  ConductManager::begin();
}
void loop() {
  ConductManager::update();
  timers.update(); // TimerManager drives recurring tasks
}


âœ… Confirms system runs without ContextManager.

Phase 6: Dismantle Globals
Goal: Move state into managers.
- AudioManager owns busy flags, gain, current file.
- LightManager owns brightness, LED status.
- SDManager owns ready/busy.
- WiFiManager owns connected flag.
- SensorManager owns temp/voltage/lux.
- Globals shrinks to constants + helpers.
Test/demo program:
void loop() {
  Serial.printf("Audio busy? %d\n", AudioManager::instance().isBusy());
  Serial.printf("Brightness: %d\n", LightManager::instance().getBrightness());
  delay(2000);
}

î·™î·š
âœ… Confirms state is encapsulated.

ðŸ“… Suggested Timeline
- Week 1
- Phase 1â€“2 (ConductManager skeleton + AudioPolicy).
- Phase 3 (LightPolicy).
- Week 2
- Phase 4 (OTA integration).
- Phase 5 (replace ContextManager).
- Phase 6 (dismantle Globals).

âœ… Summary
- Start small: ConductManager skeleton that just forwards.
- Layer in AudioPolicy and LightPolicy.
- Add OTA.
- Replace ContextManager.
- Finally, dismantle Globals.
- At each step, run a tiny demo sketch to validate the new layer before moving on.

Would you like me to also draft a minimal demo sketch that exercises all three domains (audio, light, OTA) through ConductManager, so you have a single integration test once Phases 1â€“4 are complete?
